apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'yly.plugins'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.yly.gradleandasm"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {

        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

//    flavorDimensions "yly"
//
//    productFlavors {
//        prod {
//            dimension "yly"
//        }
//        mock {
//            dimension "yly"
//        }
//    }
//    applicationVariants.all { variant ->
//        if (variant.buildType.name.equals("debug")) {
//            if (variant.getFlavorName() == "mock") {
//                project.dependencies.add("implementation", "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1")
//            }
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':asmannotation')
    kapt project(':asmprocessor')
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
//    mockImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
}

task helloTask(type: FreshTask) {

}